<resources>

    <!-- Base application theme. -->
    <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
        <!-- Customize your theme here. -->
        <item name="colorPrimary">@color/colorPrimary</item>
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <item name="colorAccent">@color/colorAccent</item>
    </style>


    <!--
        <style name ="定义样式的唯一名称 主要方便通过资源id访问"
        <item name="属性的名称">属性值</item>
    -->
    <style name="button_style">
        <item name="android:layout_width">wrap_content</item>
        <item name="android:layout_height">wrap_content</item>
        <item name="android:layout_margin">5dp</item>
        <item name="android:background">#cccccc</item>
        <item name="android:textColor">#aa0000</item>
        <item name="android:textSize">20sp</item>
        <item name="android:textStyle">bold</item>
    </style>


    <!--
        @android:style/TextAppearance 表示继承系统的样式名称
    -->

    <style name="button_style2" parent="android:style/TextAppearance">
        <item name="android:textColor">#0000aa</item>
    </style>


    <!--
         <style name="button_style2."> 引用自己定义样式
    -->
    <style name="button_style.btn_style">
        <item name="android:background">#aa0000</item>
    </style>

    <!--
        样式和主题的异同点
        相同：定义样式和主题时事通过style标签定义
        <resources>
            <style name="button_style2" parent="@android:style/TextAppearance">
                <item name="android:textColor">#0000aa</item>
                。。。。。。
            </style>
        </resources>

        不同：应用场景不同
            style 在控件或者布局标签中使用 view
            theme 在activity或者application标签中使用
    -->

    <color name="custome_color">#b0b0ff</color>

    <style name="custom_theme" parent="android:Theme.Light">
        <item name="android:background">@color/custome_color</item>
    </style>


</resources>
